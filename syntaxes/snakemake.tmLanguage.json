{
  "name": "Snakemake",
  "scopeName": "source.python.snakemake",
  "fileTypes": [
    "Snakefile",
    "smk"
  ],
  "patterns": [
    {
      "include": "#configs"
    },
    {
      "include": "#rules"
    },
    {
      "include": "#ruleparams"
    },
    {
      "include": "#functions"
    },
    {
      "include": "source.python"
    }
  ],
  "repository": {
    "configs": {
      "match": "(?x)\n  ^\\s* # Leading whitespace\n  (\n    include|configfile|snakefile|workdir|ruleorder|\n    localrules|onsuccess|onerror|onstart\n  ) # Keywords\n  : # Ending in colon\n",
      "captures": {
        "1": {
          "name": "keyword.control.snakemake.config"
        }
      }
    },
    "rules": {
      "match": "(?x)\n  ^\\s* # Leading whitespace\n  (\n    rule|subworkflow|checkpoint\n  ) # Keywords\n  (?:\\s+(\\w+))? # Optional rule name\n  : # Ending in colon\n",
      "captures": {
        "1": {
          "name": "keyword.control.snakemake"
        },
        "2": {
          "name": "entity.name.function.snakemake.rule"
        }
      }
    },
    "ruleparams": {
      "match": "(?x)\n  ^\\s* # Leading whitespace\n  (\n    input|output|params|priority|shadow|group|log|benchmark|\n    message|threads|resources|version|run|shell|script|cwl|\n    conda|singularity|wildcard_constraints|wrapper\n  ) # Keywords\n  : # Ending in colon\n",
      "captures": {
        "1": {
          "name": "keyword.control.snakemake.ruleparam"
        }
      }
    },
    "functions": {
      "match": "(?x)\n  (\n    expand|unpack|ancient|directory|\n    temp|protected|touch|pipe\n  ) # Keywords\n",
      "captures": {
        "1": {
          "name": "support.function.builtin.snakemake"
        }
      }
    }
  }
}
